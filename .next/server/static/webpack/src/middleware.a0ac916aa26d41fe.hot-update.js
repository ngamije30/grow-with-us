"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n\n// Define paths that don't require authentication\nconst publicPaths = [\n    \"/api/auth/login\",\n    \"/api/auth/register\",\n    \"/api/auth/forgot-password\",\n    \"/api/auth/reset-password\"\n];\nfunction middleware(request) {\n    const { pathname } = request.nextUrl;\n    // Allow public paths\n    if (publicPaths.includes(pathname)) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n    }\n    // Check if the path is an API route\n    if (pathname.startsWith(\"/api/\")) {\n        const token = request.headers.get(\"Authorization\")?.replace(\"Bearer \", \"\");\n        if (!token) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        try {\n            // Simple token validation - just check if it's a valid JWT format\n            const tokenParts = token.split(\".\");\n            if (tokenParts.length !== 3) {\n                throw new Error(\"Invalid token format\");\n            }\n            // Try to decode the payload (without verification)\n            let payload;\n            try {\n                const base64Payload = tokenParts[1].replace(/-/g, \"+\").replace(/_/g, \"/\");\n                const jsonPayload = decodeURIComponent(atob(base64Payload).split(\"\").map((c)=>\"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n                payload = JSON.parse(jsonPayload);\n            } catch (e) {\n                throw new Error(\"Invalid token payload\");\n            }\n            // Check if token is expired\n            if (payload.exp && payload.exp < Math.floor(Date.now() / 1000)) {\n                throw new Error(\"Token expired\");\n            }\n            // Add user info to request headers\n            const requestHeaders = new Headers(request.headers);\n            if (payload.userId) {\n                requestHeaders.set(\"x-user-id\", payload.userId);\n            }\n            if (payload.role) {\n                requestHeaders.set(\"x-user-role\", payload.role);\n            }\n            // Return response with modified headers\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next({\n                request: {\n                    headers: requestHeaders\n                }\n            });\n        } catch (error) {\n            console.error(\"Token verification error:\", error);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid or expired token\"\n            }, {\n                status: 401\n            });\n        }\n    }\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n}\nconst config = {\n    matcher: [\n        \"/api/:path*\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBRXhELGlEQUFpRDtBQUNqRCxNQUFNQyxjQUFjO0lBQ2xCO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFTSxTQUFTQyxXQUFXQyxPQUFvQjtJQUM3QyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRCxRQUFRRSxPQUFPO0lBRXBDLHFCQUFxQjtJQUNyQixJQUFJSixZQUFZSyxRQUFRLENBQUNGLFdBQVc7UUFDbEMsT0FBT0osa0ZBQVlBLENBQUNPLElBQUk7SUFDMUI7SUFFQSxvQ0FBb0M7SUFDcEMsSUFBSUgsU0FBU0ksVUFBVSxDQUFDLFVBQVU7UUFDaEMsTUFBTUMsUUFBUU4sUUFBUU8sT0FBTyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCQyxRQUFRLFdBQVc7UUFFdkUsSUFBSSxDQUFDSCxPQUFPO1lBQ1YsT0FBT1Qsa0ZBQVlBLENBQUNhLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBMEIsR0FDbkM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLElBQUk7WUFDRixrRUFBa0U7WUFDbEUsTUFBTUMsYUFBYVAsTUFBTVEsS0FBSyxDQUFDO1lBQy9CLElBQUlELFdBQVdFLE1BQU0sS0FBSyxHQUFHO2dCQUMzQixNQUFNLElBQUlDLE1BQU07WUFDbEI7WUFFQSxtREFBbUQ7WUFDbkQsSUFBSUM7WUFDSixJQUFJO2dCQUNGLE1BQU1DLGdCQUFnQkwsVUFBVSxDQUFDLEVBQUUsQ0FBQ0osT0FBTyxDQUFDLE1BQU0sS0FBS0EsT0FBTyxDQUFDLE1BQU07Z0JBQ3JFLE1BQU1VLGNBQWNDLG1CQUNsQkMsS0FBS0gsZUFDRkosS0FBSyxDQUFDLElBQ05RLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBSyxNQUFNLENBQUMsT0FBT0EsRUFBRUMsVUFBVSxDQUFDLEdBQUdDLFFBQVEsQ0FBQyxHQUFFLEVBQUdDLEtBQUssQ0FBQyxDQUFDLElBQzVEQyxJQUFJLENBQUM7Z0JBRVZWLFVBQVVXLEtBQUtDLEtBQUssQ0FBQ1Y7WUFDdkIsRUFBRSxPQUFPVyxHQUFHO2dCQUNWLE1BQU0sSUFBSWQsTUFBTTtZQUNsQjtZQUVBLDRCQUE0QjtZQUM1QixJQUFJQyxRQUFRYyxHQUFHLElBQUlkLFFBQVFjLEdBQUcsR0FBR0MsS0FBS0MsS0FBSyxDQUFDQyxLQUFLQyxHQUFHLEtBQUssT0FBTztnQkFDOUQsTUFBTSxJQUFJbkIsTUFBTTtZQUNsQjtZQUVBLG1DQUFtQztZQUNuQyxNQUFNb0IsaUJBQWlCLElBQUlDLFFBQVFyQyxRQUFRTyxPQUFPO1lBQ2xELElBQUlVLFFBQVFxQixNQUFNLEVBQUU7Z0JBQ2xCRixlQUFlRyxHQUFHLENBQUMsYUFBYXRCLFFBQVFxQixNQUFNO1lBQ2hEO1lBQ0EsSUFBSXJCLFFBQVF1QixJQUFJLEVBQUU7Z0JBQ2hCSixlQUFlRyxHQUFHLENBQUMsZUFBZXRCLFFBQVF1QixJQUFJO1lBQ2hEO1lBRUEsd0NBQXdDO1lBQ3hDLE9BQU8zQyxrRkFBWUEsQ0FBQ08sSUFBSSxDQUFDO2dCQUN2QkosU0FBUztvQkFDUE8sU0FBUzZCO2dCQUNYO1lBQ0Y7UUFDRixFQUFFLE9BQU96QixPQUFPO1lBQ2Q4QixRQUFROUIsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0MsT0FBT2Qsa0ZBQVlBLENBQUNhLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBMkIsR0FDcEM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtJQUNGO0lBRUEsT0FBT2Ysa0ZBQVlBLENBQUNPLElBQUk7QUFDMUI7QUFFTyxNQUFNc0MsU0FBUztJQUNwQkMsU0FBUztRQUNQO0tBQ0Q7QUFDSCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9taWRkbGV3YXJlLnRzP2QxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuXHJcbi8vIERlZmluZSBwYXRocyB0aGF0IGRvbid0IHJlcXVpcmUgYXV0aGVudGljYXRpb25cclxuY29uc3QgcHVibGljUGF0aHMgPSBbXHJcbiAgJy9hcGkvYXV0aC9sb2dpbicsXHJcbiAgJy9hcGkvYXV0aC9yZWdpc3RlcicsXHJcbiAgJy9hcGkvYXV0aC9mb3Jnb3QtcGFzc3dvcmQnLFxyXG4gICcvYXBpL2F1dGgvcmVzZXQtcGFzc3dvcmQnLFxyXG5dO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCB7IHBhdGhuYW1lIH0gPSByZXF1ZXN0Lm5leHRVcmw7XHJcbiAgXHJcbiAgLy8gQWxsb3cgcHVibGljIHBhdGhzXHJcbiAgaWYgKHB1YmxpY1BhdGhzLmluY2x1ZGVzKHBhdGhuYW1lKSkge1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIENoZWNrIGlmIHRoZSBwYXRoIGlzIGFuIEFQSSByb3V0ZVxyXG4gIGlmIChwYXRobmFtZS5zdGFydHNXaXRoKCcvYXBpLycpKSB7XHJcbiAgICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ0F1dGhvcml6YXRpb24nKT8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcclxuICAgIFxyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ0F1dGhlbnRpY2F0aW9uIHJlcXVpcmVkJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBTaW1wbGUgdG9rZW4gdmFsaWRhdGlvbiAtIGp1c3QgY2hlY2sgaWYgaXQncyBhIHZhbGlkIEpXVCBmb3JtYXRcclxuICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XHJcbiAgICAgIGlmICh0b2tlblBhcnRzLmxlbmd0aCAhPT0gMykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbiBmb3JtYXQnKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLy8gVHJ5IHRvIGRlY29kZSB0aGUgcGF5bG9hZCAod2l0aG91dCB2ZXJpZmljYXRpb24pXHJcbiAgICAgIGxldCBwYXlsb2FkO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGJhc2U2NFBheWxvYWQgPSB0b2tlblBhcnRzWzFdLnJlcGxhY2UoLy0vZywgJysnKS5yZXBsYWNlKC9fL2csICcvJyk7XHJcbiAgICAgICAgY29uc3QganNvblBheWxvYWQgPSBkZWNvZGVVUklDb21wb25lbnQoXHJcbiAgICAgICAgICBhdG9iKGJhc2U2NFBheWxvYWQpXHJcbiAgICAgICAgICAgIC5zcGxpdCgnJylcclxuICAgICAgICAgICAgLm1hcChjID0+ICclJyArICgnMDAnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpKVxyXG4gICAgICAgICAgICAuam9pbignJylcclxuICAgICAgICApO1xyXG4gICAgICAgIHBheWxvYWQgPSBKU09OLnBhcnNlKGpzb25QYXlsb2FkKTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbiBwYXlsb2FkJyk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vIENoZWNrIGlmIHRva2VuIGlzIGV4cGlyZWRcclxuICAgICAgaWYgKHBheWxvYWQuZXhwICYmIHBheWxvYWQuZXhwIDwgTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCkpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Rva2VuIGV4cGlyZWQnKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLy8gQWRkIHVzZXIgaW5mbyB0byByZXF1ZXN0IGhlYWRlcnNcclxuICAgICAgY29uc3QgcmVxdWVzdEhlYWRlcnMgPSBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcnMpO1xyXG4gICAgICBpZiAocGF5bG9hZC51c2VySWQpIHtcclxuICAgICAgICByZXF1ZXN0SGVhZGVycy5zZXQoJ3gtdXNlci1pZCcsIHBheWxvYWQudXNlcklkKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAocGF5bG9hZC5yb2xlKSB7XHJcbiAgICAgICAgcmVxdWVzdEhlYWRlcnMuc2V0KCd4LXVzZXItcm9sZScsIHBheWxvYWQucm9sZSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vIFJldHVybiByZXNwb25zZSB3aXRoIG1vZGlmaWVkIGhlYWRlcnNcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KHtcclxuICAgICAgICByZXF1ZXN0OiB7XHJcbiAgICAgICAgICBoZWFkZXJzOiByZXF1ZXN0SGVhZGVycyxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1Rva2VuIHZlcmlmaWNhdGlvbiBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnSW52YWxpZCBvciBleHBpcmVkIHRva2VuJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBtYXRjaGVyOiBbXHJcbiAgICAnL2FwaS86cGF0aConLFxyXG4gIF0sXHJcbn07ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJwdWJsaWNQYXRocyIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0IiwicGF0aG5hbWUiLCJuZXh0VXJsIiwiaW5jbHVkZXMiLCJuZXh0Iiwic3RhcnRzV2l0aCIsInRva2VuIiwiaGVhZGVycyIsImdldCIsInJlcGxhY2UiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJ0b2tlblBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJFcnJvciIsInBheWxvYWQiLCJiYXNlNjRQYXlsb2FkIiwianNvblBheWxvYWQiLCJkZWNvZGVVUklDb21wb25lbnQiLCJhdG9iIiwibWFwIiwiYyIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInNsaWNlIiwiam9pbiIsIkpTT04iLCJwYXJzZSIsImUiLCJleHAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwicmVxdWVzdEhlYWRlcnMiLCJIZWFkZXJzIiwidXNlcklkIiwic2V0Iiwicm9sZSIsImNvbnNvbGUiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});